/*
 * This file is generated by jOOQ.
 */
package com.pl.sggw.ecommers.jooq


import com.pl.sggw.ecommers.jooq.tables.Cart
import com.pl.sggw.ecommers.jooq.tables.CartProduct
import com.pl.sggw.ecommers.jooq.tables.Category
import com.pl.sggw.ecommers.jooq.tables.Customer
import com.pl.sggw.ecommers.jooq.tables.Product
import com.pl.sggw.ecommers.jooq.tables.StockPurchase

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC = Public()
    }

    /**
     * The table <code>public.cart</code>.
     */
    val CART get() = Cart.CART

    /**
     * The table <code>public.cart_product</code>.
     */
    val CART_PRODUCT get() = CartProduct.CART_PRODUCT

    /**
     * The table <code>public.category</code>.
     */
    val CATEGORY get() = Category.CATEGORY

    /**
     * The table <code>public.customer</code>.
     */
    val CUSTOMER get() = Customer.CUSTOMER

    /**
     * The table <code>public.product</code>.
     */
    val PRODUCT get() = Product.PRODUCT

    /**
     * The table <code>public.stock_purchase</code>.
     */
    val STOCK_PURCHASE get() = StockPurchase.STOCK_PURCHASE

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Cart.CART,
        CartProduct.CART_PRODUCT,
        Category.CATEGORY,
        Customer.CUSTOMER,
        Product.PRODUCT,
        StockPurchase.STOCK_PURCHASE
    )
}
