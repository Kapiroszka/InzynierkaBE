/*
 * This file is generated by jOOQ.
 */
package com.pl.sggw.ecommers.jooq.tables.records


import com.pl.sggw.ecommers.jooq.tables.Product

import java.math.BigDecimal
import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record9
import org.jooq.Row9
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ProductRecord() : UpdatableRecordImpl<ProductRecord>(Product.PRODUCT), Record9<Long?, String?, String?, String?, BigDecimal?, BigDecimal?, BigDecimal?, LocalDateTime?, LocalDateTime?> {

    var id: Long?
        set(value) = set(0, value)
        get() = get(0) as Long?

    var name: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var description: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    var categoryId: String?
        set(value) = set(3, value)
        get() = get(3) as String?

    var salePrice: BigDecimal?
        set(value) = set(4, value)
        get() = get(4) as BigDecimal?

    var promotionalPrice: BigDecimal?
        set(value) = set(5, value)
        get() = get(5) as BigDecimal?

    var quantity: BigDecimal?
        set(value) = set(6, value)
        get() = get(6) as BigDecimal?

    var creationTimestamp: LocalDateTime?
        set(value) = set(7, value)
        get() = get(7) as LocalDateTime?

    var modificationTimestamp: LocalDateTime?
        set(value) = set(8, value)
        get() = get(8) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row9<Long?, String?, String?, String?, BigDecimal?, BigDecimal?, BigDecimal?, LocalDateTime?, LocalDateTime?> = super.fieldsRow() as Row9<Long?, String?, String?, String?, BigDecimal?, BigDecimal?, BigDecimal?, LocalDateTime?, LocalDateTime?>
    override fun valuesRow(): Row9<Long?, String?, String?, String?, BigDecimal?, BigDecimal?, BigDecimal?, LocalDateTime?, LocalDateTime?> = super.valuesRow() as Row9<Long?, String?, String?, String?, BigDecimal?, BigDecimal?, BigDecimal?, LocalDateTime?, LocalDateTime?>
    override fun field1(): Field<Long?> = Product.PRODUCT.ID
    override fun field2(): Field<String?> = Product.PRODUCT.NAME
    override fun field3(): Field<String?> = Product.PRODUCT.DESCRIPTION
    override fun field4(): Field<String?> = Product.PRODUCT.CATEGORY_ID
    override fun field5(): Field<BigDecimal?> = Product.PRODUCT.SALE_PRICE
    override fun field6(): Field<BigDecimal?> = Product.PRODUCT.PROMOTIONAL_PRICE
    override fun field7(): Field<BigDecimal?> = Product.PRODUCT.QUANTITY
    override fun field8(): Field<LocalDateTime?> = Product.PRODUCT.CREATION_TIMESTAMP
    override fun field9(): Field<LocalDateTime?> = Product.PRODUCT.MODIFICATION_TIMESTAMP
    override fun component1(): Long? = id
    override fun component2(): String? = name
    override fun component3(): String? = description
    override fun component4(): String? = categoryId
    override fun component5(): BigDecimal? = salePrice
    override fun component6(): BigDecimal? = promotionalPrice
    override fun component7(): BigDecimal? = quantity
    override fun component8(): LocalDateTime? = creationTimestamp
    override fun component9(): LocalDateTime? = modificationTimestamp
    override fun value1(): Long? = id
    override fun value2(): String? = name
    override fun value3(): String? = description
    override fun value4(): String? = categoryId
    override fun value5(): BigDecimal? = salePrice
    override fun value6(): BigDecimal? = promotionalPrice
    override fun value7(): BigDecimal? = quantity
    override fun value8(): LocalDateTime? = creationTimestamp
    override fun value9(): LocalDateTime? = modificationTimestamp

    override fun value1(value: Long?): ProductRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): ProductRecord {
        this.name = value
        return this
    }

    override fun value3(value: String?): ProductRecord {
        this.description = value
        return this
    }

    override fun value4(value: String?): ProductRecord {
        this.categoryId = value
        return this
    }

    override fun value5(value: BigDecimal?): ProductRecord {
        this.salePrice = value
        return this
    }

    override fun value6(value: BigDecimal?): ProductRecord {
        this.promotionalPrice = value
        return this
    }

    override fun value7(value: BigDecimal?): ProductRecord {
        this.quantity = value
        return this
    }

    override fun value8(value: LocalDateTime?): ProductRecord {
        this.creationTimestamp = value
        return this
    }

    override fun value9(value: LocalDateTime?): ProductRecord {
        this.modificationTimestamp = value
        return this
    }

    override fun values(value1: Long?, value2: String?, value3: String?, value4: String?, value5: BigDecimal?, value6: BigDecimal?, value7: BigDecimal?, value8: LocalDateTime?, value9: LocalDateTime?): ProductRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        return this
    }

    /**
     * Create a detached, initialised ProductRecord
     */
    constructor(id: Long? = null, name: String? = null, description: String? = null, categoryId: String? = null, salePrice: BigDecimal? = null, promotionalPrice: BigDecimal? = null, quantity: BigDecimal? = null, creationTimestamp: LocalDateTime? = null, modificationTimestamp: LocalDateTime? = null): this() {
        this.id = id
        this.name = name
        this.description = description
        this.categoryId = categoryId
        this.salePrice = salePrice
        this.promotionalPrice = promotionalPrice
        this.quantity = quantity
        this.creationTimestamp = creationTimestamp
        this.modificationTimestamp = modificationTimestamp
    }
}
